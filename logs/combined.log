{"level":"error","message":"Unable to connect to the database: Access denied for user 'root'@'localhost' (using password: YES)","name":"SequelizeAccessDeniedError","original":{"code":"ER_ACCESS_DENIED_ERROR","errno":1045,"sqlMessage":"Access denied for user 'root'@'localhost' (using password: YES)","sqlState":"28000"},"parent":{"code":"ER_ACCESS_DENIED_ERROR","errno":1045,"sqlMessage":"Access denied for user 'root'@'localhost' (using password: YES)","sqlState":"28000"},"stack":"SequelizeAccessDeniedError: Access denied for user 'root'@'localhost' (using password: YES)\n    at ConnectionManager.connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:118:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:318:24)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:250:32\n    at async ConnectionManager.getConnection (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:280:7)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:620:26\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"error","message":"Unable to connect to the database: connect ECONNREFUSED ::1:3306","name":"SequelizeConnectionRefusedError","original":{"address":"::1","code":"ECONNREFUSED","errno":-61,"fatal":true,"port":3306,"syscall":"connect"},"parent":{"address":"::1","code":"ECONNREFUSED","errno":-61,"fatal":true,"port":3306,"syscall":"connect"},"stack":"SequelizeConnectionRefusedError: connect ECONNREFUSED ::1:3306\n    at ConnectionManager.connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:116:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:318:24)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:250:32\n    at async ConnectionManager.getConnection (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:280:7)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:620:26\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"error","message":"Unable to connect to the database: getaddrinfo ENOTFOUND localhost:3306","name":"SequelizeHostNotFoundError","original":{"code":"ENOTFOUND","errno":-3008,"fatal":true,"hostname":"localhost:3306","syscall":"getaddrinfo"},"parent":{"code":"ENOTFOUND","errno":-3008,"fatal":true,"hostname":"localhost:3306","syscall":"getaddrinfo"},"stack":"SequelizeHostNotFoundError: getaddrinfo ENOTFOUND localhost:3306\n    at ConnectionManager.connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:120:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:318:24)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:250:32\n    at async ConnectionManager.getConnection (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:280:7)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:620:26\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"error","message":"Unable to connect to the database: connect ECONNREFUSED ::1:3306","name":"SequelizeConnectionRefusedError","original":{"address":"::1","code":"ECONNREFUSED","errno":-61,"fatal":true,"port":3306,"syscall":"connect"},"parent":{"address":"::1","code":"ECONNREFUSED","errno":-61,"fatal":true,"port":3306,"syscall":"connect"},"stack":"SequelizeConnectionRefusedError: connect ECONNREFUSED ::1:3306\n    at ConnectionManager.connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:116:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:318:24)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:250:32\n    at async ConnectionManager.getConnection (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:280:7)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:620:26\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"error","message":"Unable to connect to the database: Unknown database 'user'","name":"SequelizeConnectionError","original":{"code":"ER_BAD_DB_ERROR","errno":1049,"sqlMessage":"Unknown database 'user'","sqlState":"42000"},"parent":{"code":"ER_BAD_DB_ERROR","errno":1049,"sqlMessage":"Unknown database 'user'","sqlState":"42000"},"stack":"SequelizeConnectionError: Unknown database 'user'\n    at ConnectionManager.connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:126:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:318:24)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:250:32\n    at async ConnectionManager.getConnection (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:280:7)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:620:26\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"error","message":"Unable to connect to the database: Unknown database 'user'","name":"SequelizeConnectionError","original":{"code":"ER_BAD_DB_ERROR","errno":1049,"sqlMessage":"Unknown database 'user'","sqlState":"42000"},"parent":{"code":"ER_BAD_DB_ERROR","errno":1049,"sqlMessage":"Unknown database 'user'","sqlState":"42000"},"stack":"SequelizeConnectionError: Unknown database 'user'\n    at ConnectionManager.connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:126:17)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async ConnectionManager._connect (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:318:24)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:250:32\n    at async ConnectionManager.getConnection (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:280:7)\n    at async /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:620:26\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"error","message":"Unable to connect to the database: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME N' at line 1","name":"SequelizeDatabaseError","original":{"code":"ER_PARSE_ERROR","errno":1064,"sql":"CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME N' at line 1","sqlState":"42000"},"parent":{"code":"ER_PARSE_ERROR","errno":1064,"sql":"CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME N' at line 1","sqlState":"42000"},"sql":"CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` NUMBER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;","stack":"Error\n    at Query.run (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/query.js:46:25)\n    at /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:626:28\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (7823d7c7-ac9e-42bb-b5e6-e7df4af6e5fc): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (7823d7c7-ac9e-42bb-b5e6-e7df4af6e5fc): START TRANSACTION;"}
{"level":"error"}
{"level":"debug","message":"Executing (7823d7c7-ac9e-42bb-b5e6-e7df4af6e5fc): ROLLBACK;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (9ceee31d-d8b9-482e-98f5-aec779d83a40): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (9ceee31d-d8b9-482e-98f5-aec779d83a40): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` LIMIT 1;"}
{"errors":[{"instance":{"createdAt":"2021-11-23T11:04:34.340Z","email":"harshaljain00071@gmail.com","id":null,"isActive":false,"password":"9dcfc263f2ef38445a7440a09ea245e65d283668c90b5f6eae92b9f8d1f122b8","role_id":null,"updatedAt":"2021-11-23T11:04:34.340Z"},"message":"user.firstName cannot be null","origin":"CORE","path":"firstName","type":"notNull Violation","validatorArgs":[],"validatorKey":"is_null","validatorName":null,"value":null},{"instance":{"createdAt":"2021-11-23T11:04:34.340Z","email":"harshaljain00071@gmail.com","id":null,"isActive":false,"password":"9dcfc263f2ef38445a7440a09ea245e65d283668c90b5f6eae92b9f8d1f122b8","role_id":null,"updatedAt":"2021-11-23T11:04:34.340Z"},"message":"user.lastName cannot be null","origin":"CORE","path":"lastName","type":"notNull Violation","validatorArgs":[],"validatorKey":"is_null","validatorName":null,"value":null}],"level":"error","name":"SequelizeValidationError"}
{"level":"debug","message":"Executing (9ceee31d-d8b9-482e-98f5-aec779d83a40): ROLLBACK;"}
{"level":"debug","message":"Executing (7bf64db2-85c9-4ad5-ac51-59a2d6b1fa18): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (7bf64db2-85c9-4ad5-ac51-59a2d6b1fa18): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `role_id` NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"error","message":"Unable to connect to the database: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT' at line 1","name":"SequelizeDatabaseError","original":{"code":"ER_PARSE_ERROR","errno":1064,"sql":"CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `role_id` NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT' at line 1","sqlState":"42000"},"parent":{"code":"ER_PARSE_ERROR","errno":1064,"sql":"CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `role_id` NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT' at line 1","sqlState":"42000"},"sql":"CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `role_id` NUMBER DEFAULT NULL, `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;","stack":"Error\n    at Query.run (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/mysql/query.js:46:25)\n    at /Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:626:28\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async MySQLQueryInterface.createTable (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/dialects/abstract/query-interface.js:225:12)\n    at async Function.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/model.js:1299:5)\n    at async Sequelize.sync (/Users/harshaljain/Projects/test/node_modules/sequelize/lib/sequelize.js:800:35)"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT NULL, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): INSERT INTO `roles` (`id`,`name`,`isActive`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);"}
{"level":"debug","message":"Executing (default): INSERT INTO `roles` (`id`,`name`,`isActive`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);"}
{"level":"debug","message":"Executing (default): INSERT INTO `roles` (`id`,`name`,`isActive`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?);"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (8ec96c05-9a97-43d6-acc3-e0433f735c92): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (8ec96c05-9a97-43d6-acc3-e0433f735c92): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` LIMIT 1;"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` (`id`,`email`,`password`,`firstName`,`lastName`,`role_id`,`isActive`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?);"}
{"level":"debug","message":"Executing (8ec96c05-9a97-43d6-acc3-e0433f735c92): COMMIT;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (c9e3b517-5c48-4eb4-adcb-61c5d390b8ca): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (c9e3b517-5c48-4eb4-adcb-61c5d390b8ca): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` LIMIT 1;"}
{"level":"error"}
{"level":"debug","message":"Executing (c9e3b517-5c48-4eb4-adcb-61c5d390b8ca): ROLLBACK;"}
{"level":"debug","message":"Executing (6e88e783-6884-4c4f-9f3e-a1c986a889cb): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (6e88e783-6884-4c4f-9f3e-a1c986a889cb): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` LIMIT 1;"}
{"level":"error"}
{"level":"debug","message":"Executing (6e88e783-6884-4c4f-9f3e-a1c986a889cb): ROLLBACK;"}
{"level":"debug","message":"Executing (ced4d6d9-9721-4a6e-a228-b58223e47516): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (ced4d6d9-9721-4a6e-a228-b58223e47516): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` LIMIT 1;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (b8aa46a8-011b-4e17-8fb7-a76b89ac9ae7): SET TRANSACTION ISOLATION LEVEL READ COMMITTED;"}
{"level":"debug","message":"Executing (b8aa46a8-011b-4e17-8fb7-a76b89ac9ae7): START TRANSACTION;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): INSERT INTO `users` (`id`,`email`,`password`,`firstName`,`lastName`,`role_id`,`isActive`,`createdAt`,`updatedAt`) VALUES (DEFAULT,?,?,?,?,?,?,?,?);"}
{"level":"debug","message":"Executing (b8aa46a8-011b-4e17-8fb7-a76b89ac9ae7): COMMIT;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT false, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`email`, `user`.`firstName`, `user`.`lastName`, `user`.`role_id`, `user`.`isActive`, `user`.`createdAt`, `user`.`updatedAt`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`email`, `user`.`firstName`, `user`.`lastName`, `user`.`role_id`, `user`.`isActive`, `user`.`createdAt`, `user`.`updatedAt` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`registeredAt` AS `createdAt`, `role`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`registeredAt` AS `createdAt`, `role`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';","sqlMessage":"Unknown column 'user.registeredAt' in 'field list'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`registeredAt` AS `createdAt`, `role`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';","sqlMessage":"Unknown column 'user.registeredAt' in 'field list'","sqlState":"42S22"},"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`registeredAt` AS `createdAt`, `role`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `]role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `]role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';","sqlMessage":"Unknown column ']role.name' in 'field list'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `]role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';","sqlMessage":"Unknown column ']role.name' in 'field list'","sqlState":"42S22"},"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `]role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';","sqlMessage":"Unknown column 'role.name' in 'field list'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';","sqlMessage":"Unknown column 'role.name' in 'field list'","sqlState":"42S22"},"sql":"SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role.name` AS `role`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` INNER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` AND `role`.`name` = 'superAdmin';"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`firstName`, `user`.`lastName`, `user`.`createdAt` AS `registeredAt`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, count(`role`.`name`) AS `total_cost`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role_id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `user`.`id`, count(`role`.`name`) AS `total_cost`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"parent":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `user`.`id`, count(`role`.`name`) AS `total_cost`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"sql":"SELECT `user`.`id`, count(`role`.`name`) AS `total_cost`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `db->role`.`name`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `db->role`.`name`;","sqlMessage":"Unknown column 'db->role.name' in 'group statement'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `db->role`.`name`;","sqlMessage":"Unknown column 'db->role.name' in 'group statement'","sqlState":"42S22"},"sql":"SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `db->role`.`name`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role`.`name`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role`.`name`;","sqlMessage":"Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.role.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"parent":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role`.`name`;","sqlMessage":"Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.role.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"sql":"SELECT COUNT(`user`.`role_id`) AS `role_id`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `role`.`name`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"parent":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"sql":"SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"parent":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"sql":"SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `firstName`, count(`role_id`) FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `firstName`, count(`role_id`) FROM `users` AS `user` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.firstName' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"parent":{"code":"ER_WRONG_FIELD_WITH_GROUP","errno":1055,"sql":"SELECT `firstName`, count(`role_id`) FROM `users` AS `user` GROUP BY `role_id`;","sqlMessage":"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'user.user.firstName' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by","sqlState":"42000"},"sql":"SELECT `firstName`, count(`role_id`) FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `firstName`, count(`role_id`) FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt` FROM `users` AS `user` GROUP BY `role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, COUNT('role.name') AS `roleName`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `role`.*, COUNT('role.name') AS `roleName`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `role`.*, COUNT('role.name') AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `role`.`name`, COUNT('role.name') AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `role`.`name`, COUNT('role.name') AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;","sqlMessage":"Unknown column 'user.name' in 'field list'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.`id`, `user`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;","sqlMessage":"Unknown column 'user.name' in 'field list'","sqlState":"42S22"},"sql":"SELECT `user`.`id`, `user`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `role`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `role`.`name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error","name":"SequelizeEagerLoadingError"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error","name":"SequelizeEagerLoadingError"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error","name":"SequelizeEagerLoadingError"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"error"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.`id`, `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name`, `role`.`isActive` AS `role.isActive`, `role`.`createdAt` AS `role.createdAt`, `role`.`updatedAt` AS `role.updatedAt` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`role.name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`role.name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;","sqlMessage":"Unknown column 'role.role.name' in 'field list'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`role.name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;","sqlMessage":"Unknown column 'role.role.name' in 'field list'","sqlState":"42S22"},"sql":"SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`role.name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user.role_id` AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"error","name":"SequelizeDatabaseError","original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user.role_id` AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;","sqlMessage":"Unknown column 'user.role_id' in 'field list'","sqlState":"42S22"},"parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sql":"SELECT `user.role_id` AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;","sqlMessage":"Unknown column 'user.role_id' in 'field list'","sqlState":"42S22"},"sql":"SELECT `user.role_id` AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `role_id` AS `role.name`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255) NOT NULL, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `roles`"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `firstName` VARCHAR(255) NOT NULL, `lastName` VARCHAR(255) NOT NULL, `role_id` INTEGER DEFAULT 1, `isActive` TINYINT(1) DEFAULT true, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE) ENGINE=InnoDB;"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`"}
{"level":"info","message":"DB Connection has been established successfully."}
{"level":"debug","message":"Executing (default): SELECT `id`, `email`, `password`, `firstName`, `lastName`, `role_id`, `isActive`, `createdAt`, `updatedAt`, `password` FROM `users` AS `user` WHERE `user`.`email` = 'testadmin@mail.com';"}
{"level":"debug","message":"Executing (default): SELECT `user`.*, `role`.*, COUNT('role.id') AS `roleCount`, `role`.`id` AS `role.id`, `role`.`name` AS `role.name` FROM `users` AS `user` LEFT OUTER JOIN `roles` AS `role` ON `user`.`role_id` = `role`.`id` GROUP BY `user`.`role_id`;"}
